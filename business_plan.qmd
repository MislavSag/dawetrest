---
title: "DaWetrest Business Plan"
author: "Mislav Sagovac"
date: last-modified
format:
  html:
    embed-resources: true
# format: docx
execute:
  echo: false
  warning: false
editor: visual
bibliography: reference.bib
---


{{< include methodology.qmd >}}

```{r}
# format:
#   docx:
#     toc: false
#     number-sections: true
#     highlight-style: github
# format: 
#   html:
#     embed-resources: true

library(data.table)
library(httr)
library(jsonlite)
library(flextable)
library(ggplot2)
library(patchwork)
library(stringr)
library(lubridate)
library(readxl)
library(janitor)
library(tabulapdf)
library(eurostat)
library(officer)
library(DT)
library(treemapify)

# Constants
URL      = "https://sudreg-data.gov.hr/api/javni/"
OPCINE   = c("Draž", "Erdut", "Kneževi Vinogradi", "Bilje")
OPCINEID = c(914, 1104, 213, 1953)
OPCINA   = "Draž"
OPCINAID = 914
LSGID    = vapply(as.character(OPCINEID), function(x) {
  if (nchar(x) == 3) {
    return(str_pad(str_sub(x, 1, 2), width = 3, side = "left", pad = "0"))
  } else {
    return(str_sub(x, 1, 3))
  }
}, FUN.VALUE = character(1L))
LSG     = LSGID[1]

# DT template
DT_template = function(df, n = 5) {
  datatable(df,
            rownames = FALSE,
            escape = FALSE,
            extensions = 'Buttons',
            options = list(dom = 'Blfrtip', 
                           pageLength = n,
                           buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
                           lengthMenu = list(c(10,25,50,-1), c(10,25,50,"All"))))
}
```

```{r}
# Import codes
# tmp_file = tempfile("codes_locals.pdf")
# url = "https://mpgi.gov.hr/UserDocsImages/dokumenti/Legalizacija/Statisticke_oznake.pdf"
# GET(url, write_disk(tmp_file, overwrite = TRUE))
# codes_locals = tabuli  extract_tables(tmp_file, pages = 1:10, method = "stream")
# codes_locals = lapply(codes_locals, as.data.table)
# codes_locals = rbindlist(codes_locals)
# setnames(codes_locals, c("num", "jlprs", "jlprs_control", "name"))
# codes_locals = codes_locals[num != "" & jlprs_control != ""]
# cols_ = colnames(codes_locals)[1:3]
# codes_locals = codes_locals[, (cols_) := lapply(.SD, as.integer), .SDcols = cols_]
# codes_locals = na.omit(codes_locals, cols = "num")
tmp_file = tempfile("codes_locals.pdf")
url = "https://www.porezna-uprava.hr/obrazac_joppd/Documents/%C5%A0ifrarnik%20gradova%20i%20op%C4%87ina.pdf"
GET(url, write_disk(tmp_file, overwrite = TRUE))
codes_locals = tabulapdf::extract_tables(tmp_file, col_names = FALSE)
codes_locals = lapply(codes_locals, as.data.table)
codes_locals = rbindlist(codes_locals)
codes_locals = codes_locals[, .SD, .SDcols = -3]
setnames(codes_locals, c("jlprs", "jlprs_control", "name"))
cols_ = colnames(codes_locals)[1:2]
codes_locals = codes_locals[, (cols_) := lapply(.SD, as.integer), .SDcols = cols_]
```

```{r}
# Make the POST request
token = POST(
  "https://sudreg-data.gov.hr/api/oauth/token",
  authenticate("wTVAwMD-mfGsV_q-mcTRMw..", "1uPjdUWOqkJ1HgDGrIvW0w.."),
  body = list(grant_type = "client_credentials"),
  encode = "form",
  config(ssl_verifypeer = FALSE)
)
token = content(token)
```

```{r}
# Get sreg
get_sreg_url = function(url) {
  res = GET(url,
            add_headers("Authorization" = paste0("Bearer ", token$access_token),
                        "Content-Type" = "application/json"))
  return(content(res))
}

# Get data from court public registry
get_sreg = function(tag, q = list(limit = 10000, only_active = FALSE), clean = TRUE) {
  
  # Dfine url
  url = modify_url(
    paste0(URL, tag),
    query = q
  )
  # Make GET request
  cont = get_sreg_url(url)
  # Clean if needed
  if (clean == TRUE) {
    return(rbindlist(cont))
  } else {
    return(cont)
  }
}

# Get data from court public registry in a loop
get_sreg_loop = function(tag = "subjekti", by = 10000) {
  # Define offsets
  offset_seq = seq(0, 360000, by = by)
  offset_seq = format(offset_seq, scientific = FALSE)
  offset_seq = gsub("\\s+", "", offset_seq)
  # Define urls
  urls = lapply(offset_seq, function(x) {
    modify_url(
      paste0(URL, tag),
      query = list(
        offset = x,
        limit = format(by, scientific = FALSE),
        only_active = FALSE
      )
    )
  })
  res_l = lapply(urls, get_sreg_url)
  res_l = res_l[!sapply(res_l, function(x) length(x) == 0)]
  res_l = lapply(res_l, function(l) rbindlist(lapply(l, as.data.table), fill = TRUE))
  rbindlist(res_l, fill = TRUE)
}

# # API endpoints
# endpoints = GET(paste0(URL, "open_api"),
#                 add_headers("Authorization" = paste0("Bearer ", token$access_token),
#                             "Content-Type" = "application/json"))
# content(endpoints, as = "text", content = "application/json")
```

```{r}
#| cache: true

# Business subjects
subjects = get_sreg_loop("subjekti")

# Remove rows with missing MBS
subjects = subjects[!is.na(mbs)]
subjects[, let(V1 = NULL)]
subjects_active = subjects[status == 1]

# Headquarters
headq = get_sreg_loop(tag = "sjedista")
headq = headq[!is.na(mbs)]
headq[, let(V1 = NULL)]

# # Core business
# cores = get_sreg_loop("pretezite_djelatnosti")
# nrow(cores[is.na(mbs)])
# cores = cores[!is.na(mbs)]
# 
# # Industry
# industry = get_sreg_loop("predmeti_poslovanja")
# nrow(industry[is.na(mbs)])
# industry = industry[!is.na(mbs)]
# 
# # Evidence activities
# activities = get_sreg_loop("evidencijske_djelatnosti")
# nrow(activities[is.na(mbs)])
# activities = activities[!is.na(mbs)]

# NKD
# https://ec.europa.eu/eurostat/web/metadata/classifications
nacerev2 = fread("data/NACE2_NACE2.1_Table.csv")
nacerev2_dt = nacerev2[, .(nkd2007 = gsub("\\.", "", NACE2_CODE), 
                           nkd2007_name = NACE2_HEADING)]
nacerev2_dt = unique(nacerev2_dt)

# Short name
short_names = get_sreg_loop("skracene_tvrtke")
short_names = short_names[!is.na(mbs)]
short_names[, let(V1 = NULL)]

# Possible additional endpoints
# predmeti_poslovanja
# evidencijske_djelatnosti

# Merge sreg data
dt = Reduce(
  function(x, y) merge(x, y, by = "mbs", all.x = TRUE, all.y = FALSE),
  list(subjects, headq, short_names)
)

# Missing values
if (interactive()) {
  dt[, sum(is.na(datum_osnivanja))]
  dt[, sum(is.na(sifra_opcine))]
  # dt[, sum(is.na(nacionalna_klasifikacija_djelatnosti_id))]
}

# Clean var classes
date_format_ = "%Y-%m-%dT%H:%M:%S"
dt[, datum_osnivanja := as.POSIXct(datum_osnivanja, format = date_format_)]
dt[, datum_brisanja  := as.POSIXct(datum_brisanja, format = date_format_)]

# Clean OIB column
dt[, oib := str_pad(oib, width = 11, side = "left", pad = "0")]
```

```{r}
# Import metadata
zaglavlje = suppressWarnings(
  readxl::read_xlsx("F:/fina/zaglavlje.xlsx")
  )
setDT(zaglavlje)
zaglavlje[, OIB := str_pad(OIB, width = 11, side = "left", pad = "0")]

# import data
fina_2022 = suppressWarnings(
  fread("F:/fina/RGFI_javna_objava_2022.csv", encoding = "UTF-8")
  )
fina_2022[, oib := str_pad(oib, width = 11, side = "left", pad = "0")]

# Merge zaglavlje and fina 2022
zaglavlje = zaglavlje[fina_2022[, .(
  oib,
  mb,
  revenue_2021 = aop_pg2_127,
  revenue_2022 = aop_tg2_127,
  profit_2021   = aop_pg2_185,
  profit_2022   = aop_tg2_185,
  asset_2021 = aop_pg1_125,
  asset_2022 = aop_tg1_125
)],
on = c("OIB" = "oib")]

# extract important variables
fina_dt = zaglavlje[, .(
  oib          = OIB, 
  mbs          = MBS,
  mb           = MATBROJ,
  name         = NAZIV,
  nkd2002      = NKD2002,
  nkd2007      = NKD2007,
  county       = ZUPANIJA,
  municip      = OPCINA, 
  size         = VEL,
  owner_type   = VLAST,
  owner_source = ULAZI,
  cap_source   = KAP_DOM,
  emp_hour     = ZAPOSL_SATIPR,
  month_work   = MJ_POSL_TK,
  revenue_2021, revenue_2022,
  profit_2021, profit_2022,
  asset_2021, asset_2022
  )]
```

```{r}
#| include: false
# NGO data
GET("https://banovac.mfin.hr/rnoprt/Export",
    write_disk("data/udruge.csv", overwrite = TRUE))
udruge = read.csv("data/udruge.csv", sep="$", fileEncoding="UTF-16")
udruge = as.data.table(udruge)
udruge = clean_names(udruge)
setnames(udruge,
         c("x14_postanski_broj", 
           "x18_statisticka_oznaka_grada_opcine"),
         c("postanski_broj", "jprs_id"))
udruge_dunav = udruge[jprs_id %in% LSGID]

```



```{r}
#| output: false

# Import data from DZS
pop_path = "data/popis_2021-stanovnistvo_po_gradovima_opcinama.xlsx"
excel_sheets(pop_path)
population = readxl::read_xlsx(pop_path, sheet = "1.", skip = 6)
population = clean_names(population)
setDT(population)
population_dt = population[, .(county = zupanija,
                               naziv_opcine = grad_opcina_town_municipality,
                               population_total = ukupno_total)]
population_dt = population_dt[naziv_opcine %in% OPCINE]

# Ageing
pop_cont = readxl::read_xlsx(pop_path, sheet = "6.", skip = 7)
pop_cont = clean_names(pop_cont)
setDT(pop_cont)
pop_cont_dt = pop_cont[, .(county = zupanija,
                           naziv_opcine = grad_opcina_town_municipality,
                           sex,
                           average_age = prosjecna_starost_average_age,
                           ageing_index = indeks_starenja_ageing_index,
                           age_coefficient = koeficijent_starosti_age_coefficient
                           )]
pop_cont_dt = pop_cont_dt[naziv_opcine %in% OPCINE & sex == "All", .SD, .SDcols = -"sex"]

# Merge population data
population_dt = merge(population_dt, pop_cont_dt, by = c("county", "naziv_opcine"))
```

```{r}
# Macro variables
macro_variables = melt(population_dt[, .SD, .SDcols = -"county"], id.vars = "naziv_opcine")
macro_variables = dcast(macro_variables, variable ~ naziv_opcine, value.var = "value")
ft = qflextable(macro_variables) |>
  colformat_double()
ft = set_table_properties(
  ft,
  width = 1,
  layout = "autofit"
)
ft
```

# Data

```{r}
# Import data 
# TODO: Idea is to prepare all data in other script and just import everyithing here.
# TODO: Possibly, it can be downloaded every day/week/month and then just imported here.
cpii = fread(file.path("data", "cpii.csv"))

# Filter counties
dunav_cpii = cpii[name %in% OPCINE]
```

```{r}
# COURT REGISTRY ANALYSIS -------------------------------------------------
# filter municipalities
# 914:  Draž
# 1104: Erdut
# 1953: Kneževi Vinogradi
# 213:  Bilje
# dt[grepl("Kneževi", naziv_opcine), sifra_opcine]
opcine_id = c(914, 1104, 213, 1953)
dunav = dt[sifra_opcine %in% opcine_id]
dunav = merge(
  dunav, fina_dt[, .SD, .SDcols = -c("mbs", "mb")], 
  by = "oib", all.x = TRUE, all.y = FALSE)
dunav = merge(
  dunav, population_dt[, .(naziv_opcine, population_total)], 
  by = "naziv_opcine", all.x = TRUE, all.y = FALSE)
dunav = merge(dunav, nacerev2_dt, by = "nkd2007", all.x = TRUE, all.y = FALSE)

# Not sure how this is possible but remove observations where datum_osnivanja > datum_brisanja
dunav[datum_osnivanja > datum_brisanja]
```

```{r}
# Convert dunav to panel format
panel = dunav[, .(datum_osnivanja = as.Date(datum_osnivanja), 
                  datum_brisanja = as.Date(datum_brisanja), 
                  mbs)]
panel = na.omit(panel, cols = c("datum_osnivanja"))
panel[is.na(datum_brisanja), datum_brisanja := Sys.Date() - 1]
panel = unique(panel)
panel = panel[, .(month = seq.Date(datum_osnivanja, datum_brisanja, by = 1)), 
              by = mbs]
panel[, month := ceiling_date(month, "month")-1]
panel = unique(panel)
panel = dunav[panel, on = "mbs"]
```

```{r}
# Save data for portal
fwrite(dunav, "data/dunav_municipalities_econonomics_data.csv")
fwrite(panel, "data/dunav_municipalities_econonomics_data_panel.csv")
fwrite(udruge_dunav, "data/dunav_municipalities_ngo_data_panel.csv")
```


## Business activity for Croatian Donau region in Osječko-Baranjska County

```{r}
#| label: fig-number-firms
#| fig-cap: Number of business subjects in the court registry

dt_number_firms = panel[month > as.Date("2000-01-01"),
                        .(N = .N, population_total = first(population_total)),
                        by = .(naziv_opcine, month)][order(naziv_opcine, month)]
start_year_month = dt_number_firms[, strftime(min(month), format = "%Y-%m")]
end_year_month   = dt_number_firms[, strftime(max(month), format = "%Y-%m")]
number_firms_start_draz = dt_number_firms[naziv_opcine == "Draž" & month == min(month), N]
number_firms_end_draz   = dt_number_firms[naziv_opcine == "Draž" & month == max(month), N]
dt_number_firms[, `Npp` := N / population_total]
p1 = ggplot(dt_number_firms, aes(x = month, y = N, color = naziv_opcine)) +
  geom_line() +
  theme_minimal() +
  labs(
    title = "Number of business subjects across counties",
    y = "Number of business subjects",
    color = "Counties"
  ) +
  theme(axis.title.x = element_blank()) +
  geom_line(data = dt_number_firms[naziv_opcine == "Draž"], size = 2)
p2 = ggplot(dt_number_firms, aes(x = month, y = Npp, color = naziv_opcine)) +
  geom_line() +
  theme_minimal() +
  labs(
    title = "Number of business subjects per capita across counties",
    y = "Number of business subjects pp",
    color = "Counties"
  ) +
  theme(axis.title.x = element_blank()) +
  geom_line(data = dt_number_firms[naziv_opcine == "Draž"], size = 2)
p1 / p2
```

We start out  with the number of business subjects for Donau region using the data from the court registry. In figure @fig-number-firms you can see the number of business subjects across counties through time (from `r start_year_month` to `r end_year_month`). We show the results for `r nrow(dunav)` counties, with special emphasis on Draz municipality. We can see that all counties experienced a significant increase in the number of business subjects in the observed period. Municipality `r OPCINA` have only `r number_firms_start_draz` firms at the beginning of the observed period, but the number of firms increased over time to `r number_firms_end_draz` at the end of the observed period. Compares to other counties, `r OPCINA` have smallest business activity, while Bilje experienced the highest grow of the number of business subjects. We have to note that number of active business subjects can be biased above, because it is not not uncommon for business subjects to inactive in reality, but not formally in court registry database. For exmaple, it is possible for firm to have 0 employees or no revenues, but still be active in the court registry.

Below graph of figure @fig-number-firms shows the number of business subjects per capita across counties. We can see that the number of business subjects per capita is highest in Bilje, while Erdut has the lowest number of business subjects per capita. `r OPCINA` is now on second place, with the number of business subjects per capita higher than in Kneževi Vinogradi and Erdut. 


```{r}
#| label: tbl-industry-structure
#| tab-cap: "Industry structure across counties"

# Make ggplot that shows industry by onth for every naziv_opcine with bar plot
industry_revenue = dunav[revenue_2022 > 0 & !is.na(nkd2007), 
                         .(revenue = sum(revenue_2022)),
                         by = .(naziv_opcine, nkd2007_name)]
setorder(industry_revenue, naziv_opcine, -revenue)
industry_revenue[, let(id_ = rowid(naziv_opcine))]
industry_revenue[id_ > 10, nkd2007_name := "Other"]
industry_revenue = industry_revenue[, .(revenue = sum(revenue)), 
                                    by = .(naziv_opcine, nkd2007_name)]
industry_revenue = industry_revenue[, let(
 industry_pct_revenue = round(revenue / sum(revenue) * 100, 1)
), by = naziv_opcine]
industry_revenue[, revenue := NULL]
setnames(industry_revenue, c("Municipality", "Industry", "Revenue"))

# Flextable
ft = qflextable(industry_revenue) |>
  colformat_double()
ft = set_table_properties(
  ft,
  width = 1,
  layout = "autofit"
)
border(ft,
       i = seq(11, 44, by = 11),
       border.bottom = fp_border(color = "black"),
       part = "body")
# ft

# DT table
# DT_template(industry_revenue, 11)
```

Next, we will show the industry structure across counties. In table @tbl-industry-structure you can see the results. We show the results for `r nrow(dunav)` counties. We can see that the industry structure is different across counties. 

ilje, for instance, showcases a significant emphasis on traditional manufacturing, particularly in the production of wood products, cork, straw, and plaiting materials, which alone accounts for 19% of its revenue. This is complemented by a variety of sectors including material recovery, construction, and the rental and leasing of water transport equipment, illustrating a broad economic base. The presence of non-specialised wholesale trade, road freight transport, and vehicle maintenance services further diversifies Bilje's economic activities, with the hospitality and retail sectors also making notable contributions.

Draž presents a contrasting picture with its economy heavily tilted towards agriculture, where the cultivation of cereals, leguminous crops, and oil seeds dominates, representing 33.2% of its revenue. Infrastructure development and logistics are also pivotal, with freight transport by road and construction activities standing out. Interestingly, Draž has carved out a niche in the digital economy through web portals, accounting for a significant portion of its revenue. The municipality also benefits from a diversified service sector, including warehousing, online and mail order retail, showcasing a dynamic economic landscape. Since Draž is most important municipality for our analzsis, we show it indsutry structure in the figure @fig-industry-structure.

Erdut's economy leans heavily on logistics and agriculture, with freight transport by road and swine raising leading its industrial sectors. The importance of waste management, construction, and the food service industry, alongside electricity production, indicates a well-rounded economic environment. Retail activities and the manufacture of oils and fats further contribute to Erdut's economic diversity.

Kneževi Vinogradi stands out for its strong logistics and transportation sector, with freight transport by road generating a substantial share of its revenue. The manufacturing of plastic products and a vibrant online retail scene underscore the municipality's industrial versatility. The automotive sector, both in sales and repair, alongside wholesale trade and landscape services, highlights the area's comprehensive economic activities.

The diverse economic activities across the municipalities of Bilje, Draž, Erdut, and Kneževi Vinogradi, ranging from agriculture and manufacturing to services and logistics, present unique opportunities for integrating biodiversity and wetlands restoration into the regional economic fabric. The prominence of agriculture in Draž, for instance, underscores the potential for sustainable farming practices that support biodiversity, reduce water pollution, and contribute to wetland health. The significant revenue from cereal, leguminous crops, and oil seeds cultivation can be leveraged to promote agroecological practices that enhance biodiversity and ecosystem services.

In Bilje, the leading industry of wood product manufacturing, alongside the recovery of sorted materials, highlights opportunities for sustainable resource use and waste management practices that minimize environmental impact. These industries can play a crucial role in supporting wetlands restoration projects by ensuring sustainable material sourcing and implementing waste reduction strategies that benefit local ecosystems.

The service sector, including hospitality, restaurants, and retail, provides a direct link to consumers and tourists. Businesses in these sectors can advocate for and participate in local restoration projects, promote eco-tourism, and engage in practices that reduce their environmental footprint, thereby contributing to the overall health of the local ecosystem.

Integrating biodiversity and wetlands restoration into the business model not only aligns with global sustainability goals but also offers economic benefits. By leveraging the unique industrial strengths of each municipality, businesses can contribute to a resilient and sustainable regional economy that values and actively supports the restoration and conservation of biodiversity and wetlands.

```{r}
#| label: fig-industry-structure
#| fig-cap: "Industry structure in Draž"
#| fig-width: 8
#| fig-height: 8

# Make tree plot for Draz naziv_opcine

ggplot(industry_revenue[Municipality == "Draž"], 
       aes(area = Revenue, fill = Industry)) +
  geom_treemap() +
  geom_treemap_text(
    aes(label = paste0(Revenue, "%")),
    grow = TRUE,
    reflow = TRUE,
    colour = "white"
  ) +
  theme_minimal() +
  labs(
    title = "Industry structure in Draž",
    fill = "Industry",
    x = NULL,
    y = NULL
  ) +
  # legend to the bottom and have 2 columns
  theme(legend.position = "bottom",
        legend.title = element_blank()) +
  guides(fill=guide_legend(ncol=2))

  # theme(legend.position = "bottom")

  
```

In the quest to dissect the structural nuances of local businesses, the granular analysis of concentration and hierarchy among business entities reveals a critical perspective on economic centralization. By delving into the public financial statements of all business subjects, an enumeration of the most significant entities surfaces, evaluated across four cardinal measures: employment, revenue, assets, and profit. For illustrative clarity, the primary focus here is the employment variable, with additional details on the other metrics being methodically cataloged in the appendices.

```{r}
#| label: tab-biggestfirms
#| tab-cap: "Biggest firms in the region"

# Biggest firms
biggest = dunav[!is.na(name)]

# Help function to extract largest frims by target var
largest_by_var = function(dt, var = "revenue_2022", n = 10) {
  dt_ = dt[!is.na(x), env = list(x = var)]
  dt_ = dt_[, .(naziv_opcine, name, x), env = list(x = var)]
  setorderv(dt_, c("naziv_opcine", var), c(1,-1))
  dt_[, paste0(var, "_pct") := round(x / sum(x) * 100, 2),
      by = naziv_opcine,
      env = list(x = var)]
  dt_ = dt_[, first(.SD, n), by = naziv_opcine, env = list(n = n)]
  cols = c("naziv_opcine", "name", paste0(var, "_pct"))
  dt_ = dt_[, ..cols]
  
  setnames(dt_,
           c("Municipality",
             "Firm",
             paste0(str_to_title(
               gsub("_.*", "", var)
             ), " %")))
  ft = qflextable(dt_) |>
    colformat_double()
  ft = set_table_properties(ft,
                            width = 1,
                            layout = "autofit")
  border(
    ft,
    i = seq(10, 40, by = 10),
    border.bottom = fp_border(color = "black"),
    part = "body"
  )
  # DT table
  # DT_template(dt_, 10)
}
largest_by_var(biggest, "emp_hour")
```

The table referenced as @tab-biggestfirms elucidates the concentration by employment within the municipality of Draž. The data unravels the substantial employment impact wrought by "ANABBELA D.O.O.", which singularly employs nearly a quarter (25.9%) of the workforce, thereby stamping an indelible imprint on the local employment sector. This entity's gravitational pull on the employment market is not only emblematic of its supremacy but also indicative of the municipality's economic intertwinement with this corporate entity. The aggregation of employment within the top 10 companies, accounting for two-thirds of all local employees, paints a vivid picture of economic centralization.

When shifting the lens to alternative evaluative measures, this theme of concentration amplifies. In terms of revenue, "ANABBELA D.O.O." demonstrates a commanding presence, amassing 43%, while the leading decagon of companies collectively garners an astounding 93% of total revenue. A similar trend of concentrated economic power is mirrored in profit and asset statistics, with "ANABBELA D.O.O." securing 59% and 43% respectively. Such pronounced concentration across all metrics bespeaks a high dependency of Draž's economic health on the fortunes of a select cadre of business powerhouses.

Other municipalities shows high contetration too. In, Kneževi vinogradi and Erdut, 3 business subjects accounts for more than 60% of economic activity. Bilje shows lowest concetration among all municipalities.

# Labour market

```{r}
#| label: fig-labour-structure
#| fig-cap: "Employment structure across municipalities"

# Prepare data for plot
cls = colnames(dunav_cpii)[grep("_total", colnames(dunav_cpii))]
cls = c("name", "month", cls[-length(cls)])
labour_structure = dunav_cpii[, ..cls]
labour_structure[, month := as.Date(month)]
labour_structure = melt(labour_structure, id.vars = c("name", "month"))
setorder(labour_structure, name, month)

# Plot labour structure for every municipality with geom_line
ggplot(labour_structure, aes(x = month, y = value, color = variable)) +
  geom_line() +
  facet_wrap(~name, scales = "free_y") +
  theme_minimal() +
  labs(
    title = "Employment structure across municipalities",
    y = "Number of employees",
    x = NULL,
    color = "Labour type"
  )
```

```{r}
#| label: tab-labour-structure
#| tab-cap: "Labour structure across municipalities"

# Keep last month in year for labour_structure
labour_structure_pct = labour_structure[, .SD[month == max(month)], 
                                        by = .(name, year = data.table::year(month))]
labour_structure_pct[, pct := value / sum(value) * 100, by = .(name, year)]
labour_structure_pct = dcast(labour_structure_pct, year + variable ~ name, value.var = "pct")

# Make flextable
ft = qflextable(labour_structure_pct) |>
  colformat_double(
    j = 3:ncol(labour_structure_pct),
    digits = 2,
    suffix = "%"
  ) |>
  colformat_int(
    j = 1,
    big.mark = ""
  )
ft = set_table_properties(
  ft,
  width = 1,
  layout = "autofit"
)
ft
```

The figure @fig-labour-structure illustrates the employment structure across municipalities. The data across municipality shows similar distribution. Most people work at legal entities. In Croatia, legal entities includes limited liability companies, and joint-stock companies.In table @tab-labour-structure you can see the employment structure across municipalities in percentage terms. We can confirm legal entities employ around 75% of the workforce in all municipalities. In Draž, this number exceeds 78% in the last year. Second most important employers are workers employed at physical persons. In Draž, this number is around around 8%. Two other important categories are crafters and farmers. In Draž, farmers employ around 7% of the workforce, while farmers employ around 6% of the workforce. Graph also shows that structure haven't changed much in last 4 years. Category "Workers with legal entities" is most important employer in all municipalities, with positive trend in all municipalities except Draž, where this category i relatively stable.

```{r}
# Structure across municipalities and sex

```



# Appendinx

```{r}
#| label: tab-biggestfirms-revenue
#| tab-cap: Biggest firms in the region by revenue

largest_by_var(biggest, "revenue_2022")
```

```{r}
#| label: tab-biggestfirms-asset
#| tab-cap: Biggest firms in the region by asset

largest_by_var(biggest, "asset_2022")
```

```{r}
#| label: tab-biggestfirms-profit
#| tab-cap: Biggest firms in the region by profit

largest_by_var(biggest, "profit_2022")
```


# Literatura

::: {#refs}
:::